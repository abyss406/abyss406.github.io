{"meta":{"title":"一名萌新程序员的博客","subtitle":"","description":"","author":"abyss406","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"unity 简单计数器","slug":"unity-简单计数器","date":"2023-01-24T14:50:19.000Z","updated":"2023-01-25T05:27:27.056Z","comments":true,"path":"2023/01/24/unity-简单计数器/","link":"","permalink":"http://example.com/2023/01/24/unity-%E7%AE%80%E5%8D%95%E8%AE%A1%E6%95%B0%E5%99%A8/","excerpt":"","text":"利用System.TimeSpan在游戏中做一个简单的计时器 [SerializeField] Text timeText; private float clearTime; private void FixedUpdate() &#123; clearTime += Time.fixedDeltaTime; timeText.text = System.TimeSpan.FromSeconds(clearTime).ToString(@&quot;mm\\:ss\\:ff&quot;); &#125; 效果如下：","categories":[{"name":"Unity","slug":"Unity","permalink":"http://example.com/categories/Unity/"}],"tags":[{"name":"Unity代码","slug":"Unity代码","permalink":"http://example.com/tags/Unity%E4%BB%A3%E7%A0%81/"}]},{"title":"Instantiate() 克隆对象函数用法","slug":"Instantiate-克隆对象函数用法","date":"2023-01-18T09:13:51.000Z","updated":"2023-01-18T09:25:09.786Z","comments":true,"path":"2023/01/18/Instantiate-克隆对象函数用法/","link":"","permalink":"http://example.com/2023/01/18/Instantiate-%E5%85%8B%E9%9A%86%E5%AF%B9%E8%B1%A1%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/","excerpt":"","text":"在学习unity游戏制作中 Instantiate 函数是很常用的 故此记录一下使用方法。 Instantiate 这里就记录最常用的几种重载 1.Instantiate(Object original); 2.Instantiate(Object original, Transform parent); 3.Instantiate(Object original, Transform parent, bool instantiateInWorldSpace); 4.Instantiate(Object original, Vector3 position, Quaternion rotation); 5.Instantiate(Object original, Vector3 position, Quaternion rotation, Transform parent); 参数：object original 被克隆的对象 Transform parent 克隆出的对象归属于父物体 Vector3 position 克隆对象的位置 Quaternion rotation 克隆对象的旋转状态","categories":[{"name":"Unity","slug":"Unity","permalink":"http://example.com/categories/Unity/"}],"tags":[{"name":"Unity代码","slug":"Unity代码","permalink":"http://example.com/tags/Unity%E4%BB%A3%E7%A0%81/"}]},{"title":"Unity暂停游戏，退出游戏","slug":"Unity暂停游戏，退出游戏","date":"2023-01-13T07:52:07.000Z","updated":"2023-01-24T15:01:40.515Z","comments":true,"path":"2023/01/13/Unity暂停游戏，退出游戏/","link":"","permalink":"http://example.com/2023/01/13/Unity%E6%9A%82%E5%81%9C%E6%B8%B8%E6%88%8F%EF%BC%8C%E9%80%80%E5%87%BA%E6%B8%B8%E6%88%8F/","excerpt":"","text":"1.暂停游戏Time.timeScale =0; 2.继续游戏Time.timeScale =1; 3.重新开始using UnityEngine.SceneManagement; SceneManager.LoadScene(0); // 0为游戏场景索引 4.退出游戏Application.Quit();","categories":[{"name":"Unity","slug":"Unity","permalink":"http://example.com/categories/Unity/"}],"tags":[{"name":"Unity代码","slug":"Unity代码","permalink":"http://example.com/tags/Unity%E4%BB%A3%E7%A0%81/"}]},{"title":"Liunx常用命令","slug":"Liunx常用命令","date":"2023-01-10T04:57:18.000Z","updated":"2023-01-13T08:11:18.150Z","comments":true,"path":"2023/01/10/Liunx常用命令/","link":"","permalink":"http://example.com/2023/01/10/Liunx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"1.系统命令查询ip地址ip a ip addr ping网络测试连通ip 目标ip地址 ping 目标网址 查询系统时间date 注销logout 重启reboot 清屏clean 2.文件管理命令查看文件列表# 查看当前目录下的文件列表 ls # 查看指定目录文件列表 ls /date # 查看详细信息（用户、组、大小、创建时间、权限信息、文件类型） ls -l # 查看隐藏文件 ls -a # 参数并用 ls -la 切换目录cd 目标文件夹 查看当前命令所在目录pwd 删除文件&#x2F;文件夹rm 文件名 rm -r 文件夹 # 强制删除不询问 rm -rf 文件 拷贝文件&#x2F;文件夹cp 原文件 新文件 cp -r 原文件夹 新文件夹 新建文件&#x2F;文件夹# 在当前目录下创建文件夹 mkdir 文件夹名 # 在指定目录 创建文件夹并创建父文件夹 mkdir -p /路径/路径/文件夹名 # 在当前目录创建文件 touch 文件名 移动文件&#x2F;文件夹# 移动原文件到目标文件夹中 mv 文件 文件夹 # 修改文件A的名字为文件B mv 文件A 文件B 3.文本内容查看命令# 查看文件中的全部信息 cat 文件名 # 以分页的方式浏览文件信息 less # 浏览模式快捷键 ⬆️ # 上一行 ⬇️ # 下一行 G # 最后一页 g # 第一页 空格 # 下一页 /关键词 # 搜索关键词 # 退出浏览模式 q 4.文件查找find 搜索路径 -name &quot;文件名关键词&quot; # 例 find /root/test -name &quot;config.json&quot; 5.系统管理# 静态查看系统进程 ps -aux # 实时查看系统进程 top # q 退出 # 关闭进程 kill 进程id # 强制关闭进程 kill -9 进程 6.压缩解压缩压缩：tar -zcvf 压缩后文件名 被压缩文件 解压缩：tar -zxvf 压缩文件名 -C 解压缩文件所在目录 -C # 指定解压后的文件存放位置 参数 描述 -z 操作tar.gz文件需要使用 -x 解压缩 -c 压缩 -v 显示压缩或者解压缩的执行过程信息 -f 要处理的文件file，必须放在最后 7.yum命令# 列出所有可安装的软件包 yum list # 安装软件 yum install -y 软件名 # 卸载软件 yum remove 软件名 # 查找软件包 yum search all 软件名 8.防火墙# 开启防火墙 systemctl start 服务名 # 关闭防火期（服务器重启还是会自动开启） systemctl stop firewalld # 禁止防火墙开机启动 systemctl disable firewlld 9.查看主机名hostname # 设置主机名 hostnamectl set-hostname 主机名 必要软件安装1.vim（vi增强版） vim 文件名 2.wget(下载器) wget url","categories":[{"name":"Liunx","slug":"Liunx","permalink":"http://example.com/categories/Liunx/"}],"tags":[{"name":"Liunx命令","slug":"Liunx命令","permalink":"http://example.com/tags/Liunx%E5%91%BD%E4%BB%A4/"}]},{"title":"Docker常用命令","slug":"Docker常用命令","date":"2023-01-10T04:50:24.000Z","updated":"2023-01-10T05:55:34.338Z","comments":true,"path":"2023/01/10/Docker常用命令/","link":"","permalink":"http://example.com/2023/01/10/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"时不时的会使用docker 所有整理(复制粘贴)一下常用命令。 Docker服务相关启动docker服务systemctl start docker 停止docker服务 systemctl stop docker 重启docker服务 systemctl restart docker 查看docker服务状态 systemctl status docker 设置开机启动docker服务 systemctl enable docker 镜像相关查看镜像列表docker images 镜像搜索docker search 镜像名 拉取镜像docker pull 镜像名 docker pull:Tag 镜像名 删除镜像docker rmi -f 镜像名/镜像ID 保存镜像将镜像保存为tar压缩文件 方便在任意安装了docker的电脑&#x2F;服务器上加载这个镜像 docker save 镜像名/镜像ID -o 镜像目录/镜像名字 加载镜像docker load -i 镜像保存文件位置 容器相关容器列表docker ps docker ps -a # 查看所有容器——包括运行中和停止的容器 创建容器docker run -it -d --name 名字 -p 宿主机端口:容器端口 -v 宿主机文件存储位置:容器内文件位置 镜像名:Tag /bin/bash 参数 描述 -it 表示与容器进行交互式启动 -d 表示可后台运行容器（守护式容器） –name 给运要行的容器起的名字 &#x2F;bin&#x2F;bash 交互路径 -p 将容器的端口映射到宿主机上，通过宿主机访问内部端口 -v 将容器内的指定文件夹挂载到宿主机对于的位置 停止容器docker stop 容器名/容器ID 删除容器# 删除一个容器 docker rm -f 容器名/容器ID # 删除多个容器 docker rm -f 容器名1/容器ID1 容器名2/容器ID2 容器名3/容器ID3 # 删除全部容器 docker rm -f $(docker ps -aq) 进入运行中的容器docker attach 容器名/容器ID","categories":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/categories/Docker/"}],"tags":[{"name":"Docker命令","slug":"Docker命令","permalink":"http://example.com/tags/Docker%E5%91%BD%E4%BB%A4/"}]}],"categories":[{"name":"Unity","slug":"Unity","permalink":"http://example.com/categories/Unity/"},{"name":"Liunx","slug":"Liunx","permalink":"http://example.com/categories/Liunx/"},{"name":"Docker","slug":"Docker","permalink":"http://example.com/categories/Docker/"}],"tags":[{"name":"Unity代码","slug":"Unity代码","permalink":"http://example.com/tags/Unity%E4%BB%A3%E7%A0%81/"},{"name":"Liunx命令","slug":"Liunx命令","permalink":"http://example.com/tags/Liunx%E5%91%BD%E4%BB%A4/"},{"name":"Docker命令","slug":"Docker命令","permalink":"http://example.com/tags/Docker%E5%91%BD%E4%BB%A4/"}]}